DONE: Implement FollowSchedule behavior node, or Follow path node
TODO: Spawn Mobs, have them move to destinations
TODO: Make a ABuilding class, subclass of APawn.
	UAbilitySystemComponent
	UBuildingSubsystem::GetClosestEnemyBuilding()

TODO: AttitudeInterface to determine who is an enemy or friend
TODO: AggroSystem - Module for managing Aggro 
	- AggroInterface
		- GetAggroComponent
	- AggroComponent
		- GetClosestTargetWithinRange
	- GetThreats
TODO: Figure out how to re-traverse the tree from the beginning
TODO: SOCCharacterTargetActor, look at GameplayAbilityTargetActor_Trace for examples on how to use Target Actors
TODO: Adding animations

Assuming we go with the Auto-RTS route, what kind of units should we have?

Spear guy		50
Sword and shield guy	65
Rifle/Bow/Crossbow guy	lyra anims free

TODO: Replicate when an AI character enters/exits behaviors so that AnimInstances can be applied
TODO: Add the other attack montages from CloseCombatSwordsman to SOC and activate them when attacking
TODO: Explicitly define the order of child activation in Behavior tree. I think Attack is triggering before MoveToCombatRange
TODO: Targeting system for RTS player pawn
TODO: SelectionSystem
TODO: Use ProjectWorldToScreen and DeprojectScreenToWorld to create a box selection
TODO: Get rid of avatar component, just replicate the behavior component with the properties transfered over from avatar
TODO: Rename director pawn to director avatar
TODO: Have the building call SetDirector and DirectorAvatar when it spawns an AI Character